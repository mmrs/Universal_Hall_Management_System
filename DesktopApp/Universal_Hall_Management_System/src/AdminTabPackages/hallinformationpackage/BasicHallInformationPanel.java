/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdminTabPackages.hallinformationpackage;

import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author th160
 */
public class BasicHallInformationPanel extends javax.swing.JPanel {

    ButtonGroup buttonGroup = new ButtonGroup();
    int totalRoom = 0;
    int numberOfFloor =0;
    /**
     * 
     * Creates new form BasicHallInformationPanel
     */
    public BasicHallInformationPanel() {
        initComponents();
        floorInformationTableContainer.setVisible(false);
    }
    
    void readyButtonGroup(){
        buttonGroup.add(boyRadioButton);
        buttonGroup.add(girlRadioButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hallNameLabel = new javax.swing.JLabel();
        hallNameTexField = new javax.swing.JTextField();
        hallTypeLabel = new javax.swing.JLabel();
        boyRadioButton = new javax.swing.JRadioButton();
        girlRadioButton = new javax.swing.JRadioButton();
        numberOfFloorLabel = new javax.swing.JLabel();
        numberOfFloorTextField = new javax.swing.JTextField();
        inputFloorDetailButton = new javax.swing.JButton();
        floorInformationTableContainer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        floorInformationTabel = new javax.swing.JTable();

        hallNameLabel.setText("Hall Name");

        hallNameTexField.setText("Hall Name");

        hallTypeLabel.setText("Hall Type");

        boyRadioButton.setText("Boys");

        girlRadioButton.setText("Girls");

        numberOfFloorLabel.setText("Number Of Floor");

        numberOfFloorTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberOfFloorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfFloorTextFieldActionPerformed(evt);
            }
        });
        numberOfFloorTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numberOfFloorTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numberOfFloorTextFieldKeyTyped(evt);
            }
        });

        inputFloorDetailButton.setText("Input Floor Detail");
        inputFloorDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFloorDetailButtonActionPerformed(evt);
            }
        });

        floorInformationTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Floor Number", "Number Of Room"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        floorInformationTabel.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(floorInformationTabel);
        if (floorInformationTabel.getColumnModel().getColumnCount() > 0) {
            floorInformationTabel.getColumnModel().getColumn(0).setResizable(false);
            floorInformationTabel.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout floorInformationTableContainerLayout = new javax.swing.GroupLayout(floorInformationTableContainer);
        floorInformationTableContainer.setLayout(floorInformationTableContainerLayout);
        floorInformationTableContainerLayout.setHorizontalGroup(
            floorInformationTableContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
        );
        floorInformationTableContainerLayout.setVerticalGroup(
            floorInformationTableContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(floorInformationTableContainerLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(floorInformationTableContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(numberOfFloorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hallTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hallNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputFloorDetailButton, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boyRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(girlRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(hallNameTexField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfFloorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hallNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hallNameTexField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boyRadioButton)
                    .addComponent(girlRadioButton)
                    .addComponent(hallTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfFloorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfFloorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputFloorDetailButton)
                .addGap(18, 18, 18)
                .addComponent(floorInformationTableContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public boolean isImputStringIsNumber(String str){
        for(int i = 0;i<str.length();i++){
            if(str.charAt(i) < '0' || str.charAt(i)> '9') return false;
        }
        return true;
    }
    
    
    private void inputFloorDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFloorDetailButtonActionPerformed
        // TODO add your handling code here:
        
        if(numberOfFloorTextField.getText().trim().length()<=0) {
            JOptionPane.showMessageDialog(this,"Please Enter Number Of Floor.");
            return;
        }else if(false == isImputStringIsNumber(numberOfFloorTextField.getText().trim())){
            JOptionPane.showMessageDialog(this, "Please Enter a Number(Integer Value).");
            return;
        }
        floorInformationTableContainer.setVisible(true); 
        
        makeTheFloorInformationTableReady();
    }//GEN-LAST:event_inputFloorDetailButtonActionPerformed

    private void numberOfFloorTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberOfFloorTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfFloorTextFieldKeyPressed

    private void numberOfFloorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfFloorTextFieldActionPerformed
        // TODO add your handling code here:
        if(numberOfFloorTextField.getText().trim().length()<=0) {
            JOptionPane.showMessageDialog(this,"Please Enter Number Of Floor.");
            return;
        }else if(false == isImputStringIsNumber(numberOfFloorTextField.getText().trim())){
            JOptionPane.showMessageDialog(this, "Please Enter a Number(Integer Value).");
            return;
        }
        floorInformationTableContainer.setVisible(true);
        makeTheFloorInformationTableReady();
    }//GEN-LAST:event_numberOfFloorTextFieldActionPerformed

    private void numberOfFloorTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberOfFloorTextFieldKeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        if(key<'0' || key>'9') evt.consume();
    }//GEN-LAST:event_numberOfFloorTextFieldKeyTyped
    
    void makeTheFloorInformationTableReady(){
        int rowCount = numberOfFloor = Integer.parseInt(numberOfFloorTextField.getText().trim());
        DefaultTableModel model = (DefaultTableModel) floorInformationTabel.getModel();
        int prow = model.getRowCount();
        model.setRowCount(rowCount);
        for(int i = prow;i<model.getRowCount();i++){
            model.setValueAt(i+1, i, 0);
            for(int j = 1;j<model.getColumnCount();j++){
                model.setValueAt(0, i, j);
            }
        }
    }
    
    int getNumberOfRoom(){
        totalRoom = 0;
        
        for(int i = 0;i<floorInformationTabel.getRowCount();i++){
            for(int j = 1;j<floorInformationTabel.getColumnCount();j++){
                totalRoom += (int)floorInformationTabel.getValueAt(i, j);
            }
        }
        return totalRoom;
    }
    
    public int[][] getFloorInformationTable(){
        if(numberOfFloor==0) return null;
        int floorInfo[][] = new int[numberOfFloor+1][5];
        
         for(int i = 0;i<floorInformationTabel.getRowCount();i++){
            for(int j = 1;j<floorInformationTabel.getColumnCount();j++){
                floorInfo[i+1][j]  = (int)floorInformationTabel.getValueAt(i, j);
            }
        }
        return floorInfo;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton boyRadioButton;
    private javax.swing.JTable floorInformationTabel;
    private javax.swing.JPanel floorInformationTableContainer;
    private javax.swing.JRadioButton girlRadioButton;
    private javax.swing.JLabel hallNameLabel;
    private javax.swing.JTextField hallNameTexField;
    private javax.swing.JLabel hallTypeLabel;
    private javax.swing.JButton inputFloorDetailButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel numberOfFloorLabel;
    private javax.swing.JTextField numberOfFloorTextField;
    // End of variables declaration//GEN-END:variables
}
