/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdminTabPackages.mealManagementPackage;

import BasicPackages.MealDue;
import PdfCreation.PdfTableWriter;
import QueryPackage.BasicQuery;
import com.itextpdf.text.DocumentException;
import java.io.FileNotFoundException;
import java.io.Writer;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tahmid
 */
public class GenerateDueTableOfAMonth extends javax.swing.JFrame {

    int mealRate;
    int year;
    int month;

    /**
     * Creates new form GenerateDueTableOfAMonth
     */
    public GenerateDueTableOfAMonth() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        yearChooser = new com.toedter.calendar.JYearChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        monthChooser = new com.toedter.calendar.JMonthChooser();
        jLabel3 = new javax.swing.JLabel();
        mealRateTextField = new javax.swing.JTextField();
        generateButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dueTable = new javax.swing.JTable();
        printButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Year");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Month");

        monthChooser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Meal Rate  :");

        mealRateTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mealRateTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mealRateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealRateTextFieldActionPerformed(evt);
            }
        });

        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        dueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reg Number", "Total Meal", "Year/Month", "Total Due"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dueTable);
        if (dueTable.getColumnModel().getColumnCount() > 0) {
            dueTable.getColumnModel().getColumn(0).setResizable(false);
            dueTable.getColumnModel().getColumn(1).setResizable(false);
            dueTable.getColumnModel().getColumn(2).setResizable(false);
            dueTable.getColumnModel().getColumn(3).setResizable(false);
        }

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yearChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(monthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(generateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(mealRateTextField))))))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(225, 225, 225))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yearChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(monthChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mealRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(generateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printButton)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // TODO add your handling code here:
        generateButtonFunction();
    }//GEN-LAST:event_generateButtonActionPerformed

    public void generateButtonFunction() {
        mealRate = Integer.parseInt(mealRateTextField.getText().trim());
        year = yearChooser.getYear();
        month = monthChooser.getMonth();
        try {
            int prvMealRate = BasicQuery.getMealRate(year, month);
            if (prvMealRate != -1) {

                int flag = JOptionPane.showConfirmDialog(this, BasicQuery.theMonth(month) + " - " + year + " Already has a meal rate of " + prvMealRate + "\n"
                        + "Press yes to update new meal rate to " + mealRate
                        + ". Press no or cancel to view previous data.");

                if (flag == JOptionPane.NO_OPTION || flag == JOptionPane.CANCEL_OPTION) {
                    generateTable(prvMealRate, year, month);
                }
            }
            BasicQuery.setMealRate(mealRate, year, month);
            generateTable(mealRate, year, month);

        } catch (SQLException ex) {
            Logger.getLogger(GenerateDueTableOfAMonth.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GenerateDueTableOfAMonth.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void mealRateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealRateTextFieldActionPerformed
        // TODO add your handling code here:
        generateButtonFunction();
    }//GEN-LAST:event_mealRateTextFieldActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            // TODO add your handling code here:
            new PdfTableWriter("Generated Due Table", dueTable, "Generated Due Table", "All Information Is True");
        } catch (DocumentException ex) {
            Logger.getLogger(GenerateDueTableOfAMonth.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GenerateDueTableOfAMonth.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printButtonActionPerformed

    public void generateTable(int mealRate, int year, int month) throws ClassNotFoundException, SQLException {
        ArrayList<MealDue> mealDue = BasicQuery.getTotalMealDataOfAMonth(year, month);
        DefaultTableModel model = (DefaultTableModel) dueTable.getModel();
        model.setRowCount(0);
        for (MealDue md : mealDue) {
            model.addRow(new Object[]{md.getId(), md.getTotal(), "" + year + "-" + month, md.getTotal() * mealRate});
        }
        BasicQuery.updateMealDueTable(mealDue, mealRate, year, month);
    }

    public  static void updateMealDues() throws ClassNotFoundException, SQLException  {
        Calendar calendar = Calendar.getInstance();
        int year = calendar.get(Calendar.YEAR);
        int month = calendar.get(Calendar.MONTH);
        double mealRate = BasicQuery.getCurrentMealRate(year, month);
        ArrayList<MealDue> mealDue = BasicQuery.getTotalMealDataOfAMonth(year, month);
        BasicQuery.updateMealDueTable(mealDue, mealRate, year, month);
        BasicQuery.setMealRate(mealRate, year, month);
        month--;
        if (month < 0) {
            month = 11;
            year--;
        }
       // JOptionPane.showMessageDialog(null, mealRate+"");
        mealRate = BasicQuery.getCurrentMealRate(year, month);
        mealDue = BasicQuery.getTotalMealDataOfAMonth(year,month);
        BasicQuery.updateMealDueTable(mealDue, mealRate, year, month);
        BasicQuery.setMealRate(mealRate, year, month);
       // JOptionPane.showMessageDialog(null, mealRate+"");
         
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dueTable;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mealRateTextField;
    private com.toedter.calendar.JMonthChooser monthChooser;
    private javax.swing.JButton printButton;
    private com.toedter.calendar.JYearChooser yearChooser;
    // End of variables declaration//GEN-END:variables
}
