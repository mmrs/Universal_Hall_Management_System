/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdminTabPackages.studentManagementPackage;

import BasicPackages.Student;
import QueryPackage.BasicQuery;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tahmid
 */
public class RemoveCompleteSession extends javax.swing.JFrame {

    public String session = null;
    public String dept = null;
    public ArrayList<Student> studentslist = null;

    /**
     * Creates new form RemoveCompleteSession
     */
    public RemoveCompleteSession() {
        super("Remove Complete Session");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sessionLabel = new javax.swing.JLabel();
        sessionYearChooser = new com.toedter.calendar.JYearChooser();
        departmentLabel = new javax.swing.JLabel();
        departemtTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentDataTable = new javax.swing.JTable();
        viewButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        sessionLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sessionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sessionLabel.setText("Session");

        departmentLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        departmentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        departmentLabel.setText("Department");

        departemtTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        departemtTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        departemtTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departemtTextFieldActionPerformed(evt);
            }
        });
        departemtTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                departemtTextFieldKeyTyped(evt);
            }
        });

        studentDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Reg. Number", "Student Name", "Department", "Session", "Room Number", "Remove"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentDataTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(studentDataTable);
        studentDataTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (studentDataTable.getColumnModel().getColumnCount() > 0) {
            studentDataTable.getColumnModel().getColumn(0).setResizable(false);
            studentDataTable.getColumnModel().getColumn(1).setResizable(false);
            studentDataTable.getColumnModel().getColumn(2).setResizable(false);
            studentDataTable.getColumnModel().getColumn(3).setResizable(false);
            studentDataTable.getColumnModel().getColumn(4).setResizable(false);
            studentDataTable.getColumnModel().getColumn(5).setResizable(false);
        }

        viewButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sessionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sessionYearChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(departmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(departemtTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sessionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sessionYearChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(departmentLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(departemtTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(viewButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeButton)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void departemtTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departemtTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departemtTextFieldActionPerformed

    private void departemtTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_departemtTextFieldKeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        if (!((key >= 'a' && key <= 'z') || (key >= 'A' && key <= 'Z'))) {
            evt.consume();
        }
    }//GEN-LAST:event_departemtTextFieldKeyTyped

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        session = "" + sessionYearChooser.getYear();
        dept = departemtTextField.getText().trim();

        try {
            setStudentslist(BasicQuery.getStudentList(session, dept));
            readyTable(studentslist, true);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RemoveCompleteSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RemoveCompleteSession.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        if(studentslist==null) return;
        ArrayList<Student> studentsToRemove = new ArrayList();
        
        for(int i = 0;i<studentslist.size();i++){
            if(true == (boolean)studentDataTable.getValueAt(i, 5)){
                studentsToRemove.add(studentslist.get(i));
            }
        }
        
        int flag = JOptionPane.showConfirmDialog(this, "Are you sure to remove "+studentsToRemove.size()+" students from hall?");
        if(flag == JOptionPane.NO_OPTION || flag == JOptionPane.CANCEL_OPTION) return;
        
        ArrayList<Student> newStudentList = studentslist;
        for(Student st : studentsToRemove){
            newStudentList.remove(st);
            BasicQuery.removeStudentFromHall(st);
        }
        studentslist = newStudentList;
        readyTable(newStudentList, false);
    }//GEN-LAST:event_removeButtonActionPerformed

    private void readyTable(ArrayList<Student> students,boolean flag){
        initStudentTable();

        DefaultTableModel model = (DefaultTableModel) studentDataTable.getModel();
        model.setRowCount(0);
        for(Student st : students){
            model.addRow(new Object[]{st.getId(),st.getStudent_name(),st.getStudent_dept(),st.getStudent_session(),st.getRoom_number(),flag});
        }
        return;
    }

    public void setSession(String session) {
        this.session = session;
    }

    public void setDept(String dept) {
        this.dept = dept;
    }

    public void setStudentslist(ArrayList<Student> studentslist) {
        this.studentslist = studentslist;
    }

    public void initStudentTable() {
        studentDataTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null, null, null}
                },
                new String[]{
                    "Reg. Number", "Student Name", "Department", "Session", "Room Number", "Select"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField departemtTextField;
    private javax.swing.JLabel departmentLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel sessionLabel;
    private com.toedter.calendar.JYearChooser sessionYearChooser;
    private javax.swing.JTable studentDataTable;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
