/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdminTabPackages.studentManagementPackage;

import BasicPackages.Student;
import QueryPackage.BasicQuery;
import dbconnection.CreateConnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tahmid
 */
public class AddSingleStudentFrame extends javax.swing.JFrame {

    public final String CURRENT = "current";
    Student st = null;

    /**
     * Creates new form AddSingleStudentFrame
     */
    public AddSingleStudentFrame() {
        super("Add Single Student");
        initComponents(); 
        makeTableListenter();
        makeFrameComponentInvisible();
       
    }
    
    public void makeTableListenter(){
        freeRoomTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent event) {
            // do some actions here, for example
            // print first column value from selected row
            int row = freeRoomTable.getSelectedRow();
            if(row==-1) return ;
            String room =   freeRoomTable.getValueAt(freeRoomTable.getSelectedRow(), 1).toString();
            roomNumberTextField.setText(room);
        }
    });
    }
    
    public void makeFrameComponentInvisible() {
        listOfBestFreeRoomLabel.setText("");
         
        freeRoomTable.setVisible(false);
        studentLabel.setText("");
        studentDeptName.setText("");
        allocateButton.setVisible(false);
        enterRoomNumberLabel.setVisible(false);
        enterRoomNumberLabel.setVisible(false);
        roomNumberTextField.setVisible(false);
    }

    public void makeFrameComponentVisible() {
        listOfBestFreeRoomLabel.setVisible(true);
        freeRoomTable.setVisible(true);
        allocateButton.setVisible(true);
        enterRoomNumberLabel.setVisible(true);
        enterRoomNumberLabel.setVisible(true);
        roomNumberTextField.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentRegNumberLabel = new javax.swing.JLabel();
        studentRegNumberTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        studentNameLabel = new javax.swing.JLabel();
        studentLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        freeRoomTable = new javax.swing.JTable();
        listOfBestFreeRoomLabel = new javax.swing.JLabel();
        enterRoomNumberLabel = new javax.swing.JLabel();
        roomNumberTextField = new javax.swing.JTextField();
        allocateButton = new javax.swing.JButton();
        departmentNameLabel = new javax.swing.JLabel();
        studentDeptName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        studentRegNumberLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        studentRegNumberLabel.setText("Student Reg. Number ");

        studentRegNumberTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        studentRegNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentRegNumberTextFieldActionPerformed(evt);
            }
        });
        studentRegNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                studentRegNumberTextFieldKeyTyped(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        studentNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        studentNameLabel.setText("Student Name :");

        studentLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        studentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentLabel.setText("Student");

        freeRoomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Floor", "Room Number", "Free Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(freeRoomTable);
        if (freeRoomTable.getColumnModel().getColumnCount() > 0) {
            freeRoomTable.getColumnModel().getColumn(0).setResizable(false);
            freeRoomTable.getColumnModel().getColumn(1).setResizable(false);
            freeRoomTable.getColumnModel().getColumn(2).setResizable(false);
        }

        listOfBestFreeRoomLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        listOfBestFreeRoomLabel.setText("List Of Best Free Room");

        enterRoomNumberLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        enterRoomNumberLabel.setText("Enter Room Number :");

        roomNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNumberTextFieldActionPerformed(evt);
            }
        });

        allocateButton.setText("Allocate");
        allocateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocateButtonActionPerformed(evt);
            }
        });

        departmentNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        departmentNameLabel.setText("Department : ");

        studentDeptName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        studentDeptName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentDeptName.setText("Department");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(allocateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listOfBestFreeRoomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentRegNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(studentNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentRegNumberTextField)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(studentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(enterRoomNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(roomNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(departmentNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentDeptName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentRegNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentRegNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(departmentNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(studentDeptName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listOfBestFreeRoomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterRoomNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(allocateButton)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void studentRegNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentRegNumberTextFieldActionPerformed
        // TODO add your handling code here:

        String regNo = studentRegNumberTextField.getText().trim();
        listOfBestFreeRoomLabel.setText("");
        try {
            Student student = st = BasicQuery.findStudent(regNo);
            if (student == null) {
                studentLabel.setText("No Student Found With This ID!!!");
                studentDeptName.setText("");
            } else {
                showStudentData(student);
                boolean curFlag = BasicQuery.isStudentCurrent(regNo);
                if (curFlag == false) {
                    JOptionPane.showMessageDialog(this, "This student is not current student");
                    listOfBestFreeRoomLabel.setText("Not a current student");
                    return;
                }
                int hasRoomFlag = BasicQuery.isAlreadyHasSeat(regNo);
                if (hasRoomFlag > 0) {
                    JOptionPane.showMessageDialog(this, "This sutdent already has a seat.");
                    listOfBestFreeRoomLabel.setText("This student already has a seat.");
                    return;
                }

                boolean freeRoomFlag = readyFreeSeatTable();
                if (freeRoomFlag == false) {
                    listOfBestFreeRoomLabel.setEnabled(true);
                    listOfBestFreeRoomLabel.setText("No Free Seat Available!!!");
                } else {
                    makeFrameComponentVisible();
                }

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSingleStudentFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSingleStudentFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_studentRegNumberTextFieldActionPerformed

    public boolean readyFreeSeatTable() throws ClassNotFoundException, SQLException {
        String query = "SELECT hall_info.floor_number , p.room_number , p.capacity FROM "
                + "(SELECT current_rooms_info.room_number , current_rooms_info.capacity FROM current_rooms_info "
                + "WHERE current_rooms_info.capacity > 0 ) p , hall_info WHERE hall_info.room_number = p.room_number;";
        ResultSet result = CreateConnection.getResultFromDatabase(query);
        int flag = 0;
        DefaultTableModel model = (DefaultTableModel) freeRoomTable.getModel();
        model.setRowCount(0);
        while (result.next()) {
            model.addRow(new Object[]{result.getInt(1), result.getInt(2), result.getInt(3)});
            flag = 1;
        }
        if (flag == 1) {
            return true;
        }

        return false;
    }

    void showStudentData(Student student) {
        studentLabel.setText(student.getStudent_name());
        studentDeptName.setText(student.getStudent_dept());
    }


    private void studentRegNumberTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentRegNumberTextFieldKeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        if (key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_studentRegNumberTextFieldKeyTyped

    private void roomNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNumberTextFieldActionPerformed

    private void allocateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocateButtonActionPerformed
        // TODO add your handling code here:

        String room = roomNumberTextField.getText().trim();
        st.setRoom_number(Integer.parseInt(room));
        int flag = 0;
        DefaultTableModel model = (DefaultTableModel) freeRoomTable.getModel();
        
        for (int i = 0; i < model.getRowCount(); i++) {
            System.out.println(model.getValueAt(i, 1)+" "+room+" "+flag);
            if (model.getValueAt(i, 1).toString().equals(room)) {
                flag = 1;
            }
        }
        if (flag == 0) {
            JOptionPane.showMessageDialog(this, "Please Insert A Valid Room Number.(See The Table)");
            return;
        }
        
        
        if(BasicQuery.allocateSeat(st)==true){
            JOptionPane.showMessageDialog(this, "Room : "+room+" has been allocated to "+st.getStudent_name());
            makeFrameComponentInvisible();
        }
        else{
            JOptionPane.showMessageDialog(this, "Error !!! Please try again!!!");
        }
        
        
    }//GEN-LAST:event_allocateButtonActionPerformed

   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allocateButton;
    private javax.swing.JLabel departmentNameLabel;
    private javax.swing.JLabel enterRoomNumberLabel;
    private javax.swing.JTable freeRoomTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel listOfBestFreeRoomLabel;
    private javax.swing.JTextField roomNumberTextField;
    private javax.swing.JLabel studentDeptName;
    private javax.swing.JLabel studentLabel;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JLabel studentRegNumberLabel;
    private javax.swing.JTextField studentRegNumberTextField;
    // End of variables declaration//GEN-END:variables
}
